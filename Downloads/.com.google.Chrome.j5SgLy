#include <arpa/inet.h>
#include <netinet/in.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <sys/socket.h>
#include <unistd.h>


int main(int argc, char *argv[])
{
    int cfd;
    struct sockaddr_in a;

    memset(&a, 0, sizeof(struct sockaddr_in));
    a.sin_family = AF_INET;
    a.sin_port = htons(atoi(argv[2]));
    if (inet_pton(AF_INET, argv[1], &a.sin_addr) == 0) 
    {
        fprintf(stderr, "That's not an IPv4 address.\n");
        exit(1);
    }
 
    cfd = socket(AF_INET, SOCK_STREAM, 0);

    if (cfd == -1) 
    {
        fprintf(stderr, "Socket creation error\n");
        exit(1);
    }
    
    if (connect(cfd, (struct sockaddr*)&a, sizeof(struct sockaddr_in)) == -1) 
    {
        fprintf(stderr, "Connection Failed\n");
        exit(1);
    }

    char input[29];
    char output[12];
    int numread;
    int error;
    printf("Ready\n");

    if (feof(stdin))
    {
        close(cfd);
        exit(0);   
    }

    fgets(input, 29, stdin);
    
    while (strlen(input) != 1)
    {
        if (write(cfd, input, strlen(input)) <= 0)
        {
            printf("error on write");
            close(cfd);
            exit(1);
        }

        numread = read(cfd, output, 11);
        if (numread < 0)
        {
            printf("error on read1");
            close(cfd);
            exit(1);
        }
        while (numread < 11 && output[numread - 1] != '\n')
        {
            numread += (error = read(cfd, &output[numread], 11 - numread));
            if(error < 0)
            { 
                printf("error on read");
                close(cfd);
                exit(1);
            }
        }

        if (strlen(output) == 11 && output[10] != '\n')
        {
            close(cfd);
            exit(1);
        }
        
        output[numread] = '\0'; 
        
        printf("%s", output);
        if (feof(stdin))
        {
            close(cfd);
            exit(1);   
        }
        fgets(input, 29, stdin);
    }
    close(cfd);
    exit(0);
}